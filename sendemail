import javax.mail.*;
import javax.mail.internet.*;
import java.util.*;

public class EmailSender {

    public static void sendEmail(String[] recipients, String subject, String htmlBody) {
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.example.com"); // Replace with your SMTP server
        props.put("mail.smtp.port", "25"); // Replace with the SMTP server port, usually 25 or 587

        Session session = Session.getDefaultInstance(props);

        try {

            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("your_email@example.com")); // Replace with your email address
            InternetAddress[] addressTo = new InternetAddress[recipients.length];
            for (int i = 0; i < recipients.length; i++) {
                addressTo[i] = new InternetAddress(recipients[i]);
            }
            message.setRecipients(Message.RecipientType.TO, addressTo);
            message.setSubject(subject);
            message.setContent(htmlBody, "text/html");

            Transport.send(message);

            System.out.println("Email sent successfully!");

        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }

    public static void main(String[] args) {
        String[] recipients = {"person1@example.com", "person2@example.com", "person3@example.com", "person4@example.com", "person5@example.com"};
        String subject = "Features Update";

        List<Feature> features = Arrays.asList(
                new Feature("Feature1", 3),
                new Feature("Feature2", 5),
                new Feature("Feature3", 10)
        );

        String htmlBody = generateHtmlBody(features);

        sendEmail(recipients, subject, htmlBody);
    }

    public static String generateHtmlBody(List<Feature> features) {
        StringBuilder htmlBody = new StringBuilder();
        htmlBody.append("<html>");
        htmlBody.append("<head><style>table {width: 100%; border-collapse: collapse;} table, th, td {border: 1px solid black;} th, td {padding: 10px; text-align: left;}</style></head>");
        htmlBody.append("<body>");
        htmlBody.append("<h1>Features Update</h1>");
        htmlBody.append("<table>");
        htmlBody.append("<tr><th>Feature Name</th><th>Older By Days</th></tr>");

        for (Feature feature : features) {
            htmlBody.append("<tr>");
            htmlBody.append("<td>").append(feature.getFeatureName()).append("</td>");
            htmlBody.append("<td>").append(feature.getOlderByDays()).append("</td>");
            htmlBody.append("</tr>");
        }

        htmlBody.append("</table>");
        htmlBody.append("</body>");
        htmlBody.append("</html>");

        return htmlBody.toString();
    }

    public static class Feature {
        private String featureName;
        private int olderByDays;

        public Feature(String featureName, int olderByDays) {
            this.featureName = featureName;
            this.olderByDays = olderByDays;
        }

        public String getFeatureName() {
            return featureName;
        }

        public int getOlderByDays() {
            return olderByDays;
        }
    }
}
