import org.springframework.stereotype.Component;
import javax.servlet.*;
import javax.servlet.http.HttpServletRequest;
import java.io.*;
import java.util.logging.Logger;

@Component
public class RequestCachingFilter implements Filter {

    private static final Logger logger = Logger.getLogger(RequestCachingFilter.class.getName());

    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
        HttpServletRequest httpRequest = (HttpServletRequest) request;

        // Wrap the request to be able to read the body multiple times
        CachedBodyHttpServletRequest wrappedRequest = new CachedBodyHttpServletRequest(httpRequest);

        // Pass the wrapped request down the filter chain
        chain.doFilter(wrappedRequest, response);

        // Here you can access the cached request body if needed
        String cachedBody = wrappedRequest.getCachedBody();
        logger.info("Cached Request Body: " + cachedBody);

        // Store the cached request body in the request attribute
        httpRequest.setAttribute("cachedRequestBody", cachedBody);
    }

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
        // Initialization code if needed
    }

    @Override
    public void destroy() {
        // Cleanup code if needed
    }
}
