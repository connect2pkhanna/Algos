package com.test;
import java.util.List;
import java.util.Properties;
import edu.stanford.nlp.pipeline.*;
import edu.stanford.nlp.ling.CoreAnnotations.*;
import edu.stanford.nlp.ling.CoreLabel;
import edu.stanford.nlp.util.CoreMap;

public class CoreNLPTextRankExample {
    public static void main(String[] args) {
        // Set up properties and create a pipeline
        Properties props = new Properties();
        props.setProperty("annotators", "tokenize, ssplit, pos, lemma, ner, parse, dcoref, sentiment");
        props.setProperty("coref.algorithm", "neural");
        StanfordCoreNLP pipeline = new StanfordCoreNLP(props);

        // Sample text to summarize
        String text = "Subject: Request for Updating Account Information\n" +
                      "\n" +
                      "Dear JPMC  Customer Service,\n" +
                      "\n" +
                      "I hope this email finds you well. I am writing to request an update to my account information. Recently, I have relocated to a new address, and I need to ensure that my account reflects this change accurately.\n" +
                      "\n" +
                      "Below are the updated details:\n" +
                      "\n" +
                      "New Address: 2c 301 Akme encore Brookfields\n" +
                      "Contact Number:9538004119\n" +
                      "\n" +
                      "Account Number to Update: [Account Number]\n by 2024-02-28 and add $500 to the account" +
                      "\n" +
                      "Kindly update my account records with this information at your earliest convenience. If there are any additional forms or documents required, please let me know, and I will promptly provide them.\n" +
                      "\n" +
                      "Thank you for your attention to this matter.\n" +
                      "\n" +
                      "Sincerely,\n" +
                      "[Your Name]\n" +
                      "[Your Account Number]";

        // Annotate the text
        Annotation document = new Annotation(text);
        pipeline.annotate(document);

        // Extract sentences
        List<CoreMap> sentences = document.get(SentencesAnnotation.class);
        for (CoreMap sentence : sentences) {
            for (CoreLabel token : sentence.get(TokensAnnotation.class)) {
                String word = token.get(TextAnnotation.class);
                String nerTag = token.get(NamedEntityTagAnnotation.class);
                if (!nerTag.equals("O")) { // "O" indicates no named entity
                    System.out.println("Entity: " + word + ", Type: " + nerTag);
                }
            }
        }
//        // Select top 3 sentences as summary
//        StringBuilder summary = new StringBuilder();
//        int numSentences = Math.min(3, sentences.size());
//        for (int i = 0; i < numSentences; i++) {
//            summary.append(sentences.get(i).toString()).append("\n");
//        }
//
//        // Print the summary
//        System.out.println("Summary:");
//        System.out.println(summary.toString());
    }
}
